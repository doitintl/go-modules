// Code generated by mockery v2.12.3. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// FnWorker is an autogenerated mock type for the FnWorker type
type FnWorker struct {
	mock.Mock
}

// IsRunning provides a mock function with given fields:
func (_m *FnWorker) IsRunning() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Start provides a mock function with given fields: ctx
func (_m *FnWorker) Start(ctx context.Context) {
	_m.Called(ctx)
}

// Stop provides a mock function with given fields:
func (_m *FnWorker) Stop() {
	_m.Called()
}

type NewFnWorkerT interface {
	mock.TestingT
	Cleanup(func())
}

// NewFnWorker creates a new instance of FnWorker. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewFnWorker(t NewFnWorkerT) *FnWorker {
	mock := &FnWorker{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
